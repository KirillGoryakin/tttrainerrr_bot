from questionnaire import ask_questionnaire_question
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.constants import PARSEMODE_MARKDOWN
from telegram.ext import CallbackContext
from utils import ask_yandex_gpt, questionnaire_to_string

initial_user_data = {
  "sex": None,
  "age": None,
  "weight": None,
  "height": None,
  "meal_frequency": None,
  "meal_description": None,
  "physical_activity": None,
}

def start(update: Update, context: CallbackContext):
  print("/start")
  chat = update.message.chat
  context.user_data.clear()
  context.user_data['data'] = initial_user_data.copy()
  context.user_data['state'] = "questionnaire"
  update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç, *{chat.first_name}*! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç YandexGPT –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ç–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã. –î–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏ –∞–Ω–∫–µ—Ç—É.", parse_mode=PARSEMODE_MARKDOWN)
  ask_questionnaire_question(update, context)

def menu(update: Update, context: CallbackContext):
  print("/menu")
  update.message.reply_text(
    "*–ú–µ–Ω—é*",
    parse_mode=PARSEMODE_MARKDOWN,
    reply_markup=InlineKeyboardMarkup([
      [InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ", callback_data="command:start")],
      [InlineKeyboardButton("‚ú® –û—Ü–µ–Ω–∏—Ç—å —Å–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ", callback_data="command:assessment")],
      [InlineKeyboardButton("‚ú® –û—Ü–µ–Ω–∏—Ç—å —Å–≤–æ—é –µ–¥—É –ø–æ —Ñ–æ—Ç–æ", callback_data="command:food_assessment")],
    ]),
  )

def assessment(update: Update, context: CallbackContext):
  print("/assessment")
  user_data = context.user_data['data']
  result: str = ask_yandex_gpt(
    "–¢—ã –∏–≥—Ä–∞–µ—à—å —Ä–æ–ª—å —Ç—Ä–µ–Ω–µ—Ä–∞ –∏ –¥–∏–µ—Ç–æ–ª–æ–≥–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É –æ —Å–≤–æ—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –ù–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –æ—Ç–≤–µ—Ç–æ–≤ —Ç—ã –¥–æ–ª–∂–µ–Ω –¥–∞—Ç—å –æ—Ü–µ–Ω–∫—É –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è –∏ –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏ –∏ –¥–∞—Ç—å –ø–∞—Ä—É —Å–æ–≤–µ—Ç–æ–≤. –¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–Ω–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Å —Ç–≤–æ–µ–π –æ—Ü–µ–Ω–∫–æ–π. –î–∞–ª–µ–µ –∏–¥—É—Ç —Ç–≤–æ–∏ —Å–æ–≤–µ—Ç—ã, –Ω–æ –Ω–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, –Ω–µ –±–æ–ª–µ–µ 4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –í —Å–≤–æ—ë–º –æ—Ç–≤–µ—Ç–µ –æ–±—Ä–∞—â–∞–π—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –¢—ã, –≤ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ.",
    questionnaire_to_string(user_data),
  )
  print(result)
  update.message.reply_text(result.replace("**", "*"), parse_mode=PARSEMODE_MARKDOWN)
  
def food_assessment(update: Update, context: CallbackContext):
  context.user_data['state'] = "food_assessment"
  update.message.reply_text("–î–∞–≤–∞–π —è –æ—Ü–µ–Ω—é —Ç–≤–æ—é —Ö–∞–≤–∫—É. –ö–∏–¥–∞–π —Ñ–æ—Ç–∫—É üì∑")

commands = {
  "start": start,
  "menu": menu,
  "assessment": assessment,
  # "food_assessment": food_assessment,
}